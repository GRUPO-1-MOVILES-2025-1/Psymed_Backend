// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using psymed_platform.Shared.Infrastructure.Persistence.EFC.Configuration;

#nullable disable

namespace psymed_platform.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("psymed_platform.Appoiment_Administration.Domain.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombrePaciente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Appointments", (string)null);
                });

            modelBuilder.Entity("psymed_platform.IAM.Domain.Model.Aggregates.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(191)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ubication")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("psymed_platform.Medication.Domain.Model.Aggregates.Medication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("medications", (string)null);
                });

            modelBuilder.Entity("psymed_platform.Medication.Domain.Model.Aggregates.Medication", b =>
                {
                    b.OwnsOne("psymed_platform.Medication.Domain.Model.ValueObjects.Prescription", "Prescription", b1 =>
                        {
                            b1.Property<int>("MedicationId")
                                .HasColumnType("int");

                            b1.Property<string>("Frequency")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Quantity")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("MedicationId");

                            b1.ToTable("medications");

                            b1.WithOwner()
                                .HasForeignKey("MedicationId");
                        });

                    b.OwnsOne("psymed_platform.Medication.Domain.ValueObjects.LifeCycleMedication", "LifeCycleMedication", b1 =>
                        {
                            b1.Property<int>("MedicationId")
                                .HasColumnType("int");

                            b1.Property<string>("EndedDate")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("StartedDate")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("MedicationId");

                            b1.ToTable("medications");

                            b1.WithOwner()
                                .HasForeignKey("MedicationId");
                        });

                    b.Navigation("LifeCycleMedication")
                        .IsRequired();

                    b.Navigation("Prescription")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
